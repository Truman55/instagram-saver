@import '../variables';
@import '../mixins/screen';
@import 'functions';
@import 'mixins';

.layout {
    &-wrapper {
        max-width: 100%;
        margin: 0 auto;

        @include screen-sm() {
            padding: 0 $grid-gutter-width / 2;
            max-width: $container-sm-max-width;
        }

        @include screen-md() {
            max-width: $container-md-max-width;
        }

        @include screen-lg() {
            max-width: $container-lg-max-width;
        }
    }
}

.grid-row {
    display: flex;
    flex-wrap: wrap;
}

[class*="grid-item"] {
    min-height: 1px;
    position: relative;
    width: 100%;
    padding-left: 0;
    padding-right: 0;

    @include screen-sm() {
        padding-left: $grid-gutter-width / 2;
        padding-right: $grid-gutter-width / 2;
    }
}

@each $breakpoint in map-keys($grid-breakpoints) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
        @for $i from 1 through $grid-columns {
            .grid-item#{$infix}-#{$i} {
                @include make-col($i, $grid-columns);
            }
        }
    }
}

// Responsive visibility utilities
@each $bp in map-keys($grid-breakpoints) {
    .hidden-#{$bp}-up {
        @include media-breakpoint-up($bp) {
            display: none !important;
        }
    }

    .hidden-#{$bp}-down {
        @include media-breakpoint-down($bp) {
            display: none !important;
        }
    }

    .hidden-#{$bp}-only {
        @include media-breakpoint-only($bp) {
            display: none !important;
        }
    }
}